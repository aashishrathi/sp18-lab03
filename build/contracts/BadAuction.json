{
  "contractName": "BadAuction",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getHighestBidder",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x003495a4"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getHighestBid",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4979440a"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "bid",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function",
      "signature": "0x1998aeef"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reduceBid",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x057ae235"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getHighestBidder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reduceBid\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"bid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHighestBid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{},\"title\":\"BadAuction \"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/aashishrathi/Projects/BlockchainLearning/sp18-lab03/contracts/BadAuction.sol\":\"BadAuction\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/aashishrathi/Projects/BlockchainLearning/sp18-lab03/contracts/AuctionInterface.sol\":{\"keccak256\":\"0x71e339a4da53d881e8a4a8204bb6c3f08cafb6cd87b0d6667ff173eac8d50ac4\",\"urls\":[\"bzzr://b0c9c1afcdb05bf761a4421c2c07ecdf4e751e1ea13d9f8e3774589e14eb7442\"]},\"/Users/aashishrathi/Projects/BlockchainLearning/sp18-lab03/contracts/BadAuction.sol\":{\"keccak256\":\"0x3a13a42c43cb8e7829366446601346af4c5fb6f2b47a214e834733e65177b9d1\",\"urls\":[\"bzzr://4f9c01fd42bb60b0a92607524915cea70dc2a738114c89a38634abbbcd89da40\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610207806100206000396000f3fe608060405260043610610061576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680623495a414610063578063057ae235146100ba5780631998aeef146100d15780634979440a146100f3575b005b34801561006f57600080fd5b5061007861011e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100c657600080fd5b506100cf610147565b005b6100d96101cc565b604051808215151515815260200191505060405180910390f35b3480156100ff57600080fd5b506101086101d1565b6040518082815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001541015156101c55760018054036001819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f1935050505015156101c057600080fd5b6101ca565b600080fd5b565b600090565b600060015490509056fea165627a7a723058201ed5b0702b323933daae7b8163805a2eb3c5ce4daeb8df66ef022fbad9fcde960029",
  "deployedBytecode": "0x608060405260043610610061576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680623495a414610063578063057ae235146100ba5780631998aeef146100d15780634979440a146100f3575b005b34801561006f57600080fd5b5061007861011e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100c657600080fd5b506100cf610147565b005b6100d96101cc565b604051808215151515815260200191505060405180910390f35b3480156100ff57600080fd5b506101086101d1565b6040518082815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001541015156101c55760018054036001819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f1935050505015156101c057600080fd5b6101ca565b600080fd5b565b600090565b600060015490509056fea165627a7a723058201ed5b0702b323933daae7b8163805a2eb3c5ce4daeb8df66ef022fbad9fcde960029",
  "sourceMap": "83:1037:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;83:1037:1;;;;;;;",
  "deployedSourceMap": "83:1037:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;215:86:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;215:86:0;;;;;;;;;;;;;;;;;;;;;;;;;;;639:178:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:178:1;;;;;;330:71;;;;;;;;;;;;;;;;;;;;;;;;;;;303:77:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;303:77:0;;;;;;;;;;;;;;;;;;;;;;;215:86;264:7;284:13;;;;;;;;;;;277:20;;215:86;:::o;639:178:1:-;694:1;680:10;;:15;;676:138;;;734:1;721:10;;:14;708:10;:27;;;;754:13;;;;;;;;;;;:18;;:21;773:1;754:21;;;;;;;;;;;;;;;;;;;;;;;746:30;;;;;;;;676:138;;;798:8;;;676:138;639:178::o;330:71::-;371:4;330:71;:::o;303:77:0:-;349:4;366:10;;359:17;;303:77;:::o",
  "source": "pragma solidity 0.5.0;\n\nimport \"./AuctionInterface.sol\";\n\n/** @title BadAuction */\ncontract BadAuction is AuctionInterface {\n\n\n\t/* Bid function, vulnerable to reentrency attack.\n\t * Must return true on successful send and/or bid,\n\t * bidder reassignment\n\t * Must return false on failure and send people\n\t * their funds back\n\t */\n\tfunction bid() payable external returns (bool) {\n\t\t// YOUR CODE HERE\n\t}\n\n\n\t/* \tReduce bid function. Vulnerable to attack.\n\t\tAllows current highest bidder to reduce\n\t\ttheir bid by 1. Do NOT make changes here.\n\t\tInstead notice the vulnerabilities, and\n\t\timplement the function properly in GoodAuction.sol  */\n\n\tfunction reduceBid() external {\n\t    if (highestBid >= 0) {\n\t        highestBid = highestBid - 1;\n\t        require(highestBidder.send(1));\n\t    } else {\n\t    \trevert();\n\t    }\n\t}\n\n\n\t/* \tRemember this fallback function\n\t\tgets invoked if somebody calls a\n\t\tfunction that does not exist in this\n\t\tcontract. But we're good people so we don't\n\t\twant to profit on people's mistakes.\n\t\tHow do we send people their money back?  */\n\n\tfunction () external payable {\n\t\t// YOUR CODE HERE\n\t}\n\n}\n",
  "sourcePath": "/Users/aashishrathi/Projects/BlockchainLearning/sp18-lab03/contracts/BadAuction.sol",
  "ast": {
    "absolutePath": "/Users/aashishrathi/Projects/BlockchainLearning/sp18-lab03/contracts/BadAuction.sol",
    "exportedSymbols": {
      "BadAuction": [
        72
      ]
    },
    "id": 73,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 32,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "/Users/aashishrathi/Projects/BlockchainLearning/sp18-lab03/contracts/AuctionInterface.sol",
        "file": "./AuctionInterface.sol",
        "id": 33,
        "nodeType": "ImportDirective",
        "scope": 73,
        "sourceUnit": 31,
        "src": "24:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 34,
              "name": "AuctionInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30,
              "src": "106:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AuctionInterface_$30",
                "typeString": "contract AuctionInterface"
              }
            },
            "id": 35,
            "nodeType": "InheritanceSpecifier",
            "src": "106:16:1"
          }
        ],
        "contractDependencies": [
          30
        ],
        "contractKind": "contract",
        "documentation": "@title BadAuction ",
        "fullyImplemented": true,
        "id": 72,
        "linearizedBaseContracts": [
          72,
          30
        ],
        "name": "BadAuction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "377:24:1",
              "statements": []
            },
            "documentation": null,
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bid",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:2:1"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "371:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "370:6:1"
            },
            "scope": 72,
            "src": "330:71:1",
            "stateMutability": "payable",
            "superFunction": 10,
            "visibility": "external"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "669:148:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 44,
                      "name": "highestBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "680:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "694:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "680:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 64,
                    "nodeType": "Block",
                    "src": "790:24:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 61,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              412,
                              413
                            ],
                            "referencedDeclaration": 412,
                            "src": "798:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "798:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63,
                        "nodeType": "ExpressionStatement",
                        "src": "798:8:1"
                      }
                    ]
                  },
                  "id": 65,
                  "nodeType": "IfStatement",
                  "src": "676:138:1",
                  "trueBody": {
                    "id": 60,
                    "nodeType": "Block",
                    "src": "697:87:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 47,
                            "name": "highestBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "708:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 48,
                              "name": "highestBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "721:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "734:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "721:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "708:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "708:27:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 56,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "773:1:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 54,
                                  "name": "highestBidder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3,
                                  "src": "754:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 55,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "send",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "754:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) returns (bool)"
                                }
                              },
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "754:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 53,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              410,
                              411
                            ],
                            "referencedDeclaration": 410,
                            "src": "746:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "746:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59,
                        "nodeType": "ExpressionStatement",
                        "src": "746:30:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 67,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reduceBid",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "657:2:1"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "669:0:1"
            },
            "scope": 72,
            "src": "639:178:1",
            "stateMutability": "nonpayable",
            "superFunction": 13,
            "visibility": "external"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "1093:24:1",
              "statements": []
            },
            "documentation": null,
            "id": 71,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:2:1"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1093:0:1"
            },
            "scope": 72,
            "src": "1064:53:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 73,
        "src": "83:1037:1"
      }
    ],
    "src": "0:1121:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/aashishrathi/Projects/BlockchainLearning/sp18-lab03/contracts/BadAuction.sol",
    "exportedSymbols": {
      "BadAuction": [
        72
      ]
    },
    "id": 73,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 32,
        "literals": [
          "solidity",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "/Users/aashishrathi/Projects/BlockchainLearning/sp18-lab03/contracts/AuctionInterface.sol",
        "file": "./AuctionInterface.sol",
        "id": 33,
        "nodeType": "ImportDirective",
        "scope": 73,
        "sourceUnit": 31,
        "src": "24:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 34,
              "name": "AuctionInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30,
              "src": "106:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AuctionInterface_$30",
                "typeString": "contract AuctionInterface"
              }
            },
            "id": 35,
            "nodeType": "InheritanceSpecifier",
            "src": "106:16:1"
          }
        ],
        "contractDependencies": [
          30
        ],
        "contractKind": "contract",
        "documentation": "@title BadAuction ",
        "fullyImplemented": true,
        "id": 72,
        "linearizedBaseContracts": [
          72,
          30
        ],
        "name": "BadAuction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "377:24:1",
              "statements": []
            },
            "documentation": null,
            "id": 41,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bid",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:2:1"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "371:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "370:6:1"
            },
            "scope": 72,
            "src": "330:71:1",
            "stateMutability": "payable",
            "superFunction": 10,
            "visibility": "external"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "669:148:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 44,
                      "name": "highestBid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "680:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "694:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "680:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 64,
                    "nodeType": "Block",
                    "src": "790:24:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 61,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              412,
                              413
                            ],
                            "referencedDeclaration": 412,
                            "src": "798:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "798:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63,
                        "nodeType": "ExpressionStatement",
                        "src": "798:8:1"
                      }
                    ]
                  },
                  "id": 65,
                  "nodeType": "IfStatement",
                  "src": "676:138:1",
                  "trueBody": {
                    "id": 60,
                    "nodeType": "Block",
                    "src": "697:87:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 47,
                            "name": "highestBid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "708:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 48,
                              "name": "highestBid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "721:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "734:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "721:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "708:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "708:27:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 56,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "773:1:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 54,
                                  "name": "highestBidder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3,
                                  "src": "754:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 55,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "send",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "754:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) returns (bool)"
                                }
                              },
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "754:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 53,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              410,
                              411
                            ],
                            "referencedDeclaration": 410,
                            "src": "746:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "746:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59,
                        "nodeType": "ExpressionStatement",
                        "src": "746:30:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 67,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reduceBid",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "657:2:1"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "669:0:1"
            },
            "scope": 72,
            "src": "639:178:1",
            "stateMutability": "nonpayable",
            "superFunction": 13,
            "visibility": "external"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "1093:24:1",
              "statements": []
            },
            "documentation": null,
            "id": 71,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:2:1"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1093:0:1"
            },
            "scope": 72,
            "src": "1064:53:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 73,
        "src": "83:1037:1"
      }
    ],
    "src": "0:1121:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1562588259041": {
      "events": {},
      "links": {},
      "address": "0xf36d4Ec4A924E5EdEa05143d0905db512aeb4166",
      "transactionHash": "0x6a22b0ed2a605864e306db34718f6ef9edb9b999259fda07e1aed5bb6e3288df"
    }
  },
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-07-09T08:33:51.131Z",
  "devdoc": {
    "methods": {},
    "title": "BadAuction "
  },
  "userdoc": {
    "methods": {}
  }
}